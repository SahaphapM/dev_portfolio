html, body {
  height: 100vh;
  overflow-y: auto;
  // cursor: url("assets/cursor.svg"), auto;
}

@keyframes glitch-1 {
  0% {
    transform: translate(0, 0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0, 0);
  }
}

@keyframes glitch-2 {
  0% {
    transform: translate(0, 0);
  }
  20% {
    transform: translate(2px, -2px);
  }
  40% {
    transform: translate(2px, 2px);
  }
  60% {
    transform: translate(-2px, -2px);
  }
  80% {
    transform: translate(-2px, 2px);
  }
  100% {
    transform: translate(0, 0);
  }
}

.animate-glitch-1 {
  animation: glitch-1 1s infinite;
}

.animate-glitch-2 {
  animation: glitch-2 1s infinite;
}

/* Optional: เพิ่ม animation ถ้าต้องการ */
@keyframes fadeUp {
  0% {
    opacity: 0;
    transform: translateY(50px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}


#mainScrollWrapper {
  position: relative; /* จำเป็นสำหรับ ScrollTrigger */
  scroll-snap-type: y mandatory;
  overflow-y: scroll;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none;  /* IE/Edge */
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
}

#mainScrollWrapper::-webkit-scrollbar {
  display: none; /* Chrome, Safari */
}

#heroSection {
  opacity: 0; /* ซ่อนเริ่มต้น */
  transform: translateY(0px); /* เลื่อนลงเล็กน้อย */
}

.section-content > * {
  opacity: 0; /* ซ่อนเนื้อหาใน Hero */
  transform: translateY(20px);
}


@keyframes wiggle {
  0%, 100% { transform: rotate(-5deg); }
  50% { transform: rotate(5deg); }
}
.animate-wiggle {
  animation: wiggle 0.8s infinite;
}

/* เพิ่มใน app.scss */
.parallax-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background:
    linear-gradient(45deg, rgba(18, 18, 18, 0.8) 0%, transparent 100%),
    radial-gradient(circle at 10% 20%, rgba(218, 165, 32, 0.185) 0%, transparent 40%);
  z-index: -1;
  pointer-events: none;
  transition: transform 0.6s cubic-bezier(0.16, 1, 0.3, 1);
}


/* เพิ่ม animation สำหรับลูกศร */
@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.animate-bounce {
  animation: bounce 1.5s infinite;
}

.scroll-down-indicator {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.vintage-scroll-indicator {
  display: flex;
  flex-direction: column;
  align-items: center;
  cursor: pointer;
}

.vintage-scroll-indicator .line {
  width: 1px;
  height: 50px;
  background: linear-gradient(to bottom,
    transparent,
    rgba(218, 165, 32, 0.8) 20%,
    rgba(218, 165, 32, 0.8) 80%,
    transparent);
  position: relative;
  overflow: hidden;
}

.vintage-scroll-indicator .line::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 15px;
  background: #DAA520;
  animation: scrollLine 2.5s infinite;
}

@keyframes scrollLine {
  0% {
    top: -15px;
  }
  100% {
    top: 50px;
  }
}

.vintage-scroll-indicator .text {
  margin-top: 10px;
  font-size: 0.7rem;
  letter-spacing: 3px;
  color: rgba(218, 165, 32, 0.8);
  text-transform: uppercase;
  animation: pulseText 2s infinite;
}

@keyframes pulseText {
  0%, 100% {
    opacity: 0.6;
  }
  50% {
    opacity: 1;
  }
}


.font-vintage-thai {
  font-family: 'Chonburi', 'Kanit', 'Sarabun', 'Prompt', 'sans-serif';
  font-weight: 400;
  letter-spacing: 0.04em;
}

.hero-thai-interactive {
  position: relative;
  display: inline-block;
  color: #f5f5dc;
  text-shadow: 0 2px 0 #000a;
  transition: text-shadow 0.3s cubic-bezier(0.4,0,0.2,1), transform 0.2s;
  cursor: pointer;
}
.hero-thai-interactive:hover {
  text-shadow: 0 2px 0 #000a;
  transform: scale(1.04) rotate(-1deg);
}

/* Mousemove parallax effect (JS will add --x, --y) */
.hero-thai-interactive[data-parallax] {
  will-change: transform;
  transition: transform 0.15s cubic-bezier(0.4,0,0.2,1);
  transform: perspective(400px) rotateY(var(--x,0deg)) rotateX(var(--y,0deg));
}

.tiger-trigger {
  display: inline-block; /* ทำให้ span กำหนดความกว้างได้ */
  position: relative; /* สำคัญมาก! สำหรับให้ child ที่เป็น absolute อ้างอิง */
  text-align: center;    /* จัดตัวอักษร/อีโมจิให้อยู่ตรงกลาง */
  width: 1.3em; /* กำหนดความกว้างเริ่มต้นให้พอดีกับ 'ส' (อาจต้องปรับค่า) */
  height: 1.1em; /* อาจจะต้องกำหนดความสูงด้วยเพื่อความเสถียร */
  cursor: pointer;
  z-index: 2;
}
.shift-right {
  margin-left: 0.5em; /* คุณต้องปรับค่านี้ให้พอดีกับระยะที่ต้องการ */
  transition: margin-left 0.3s ease-in-out; /* เพิ่ม transition เพื่อให้การขยับดูนุ่มนวล */
}
.tiger-anim {
  position: absolute;
  left: 50%;
  bottom: 100%;
  transform: translateX(-80%) translateY(10px) scale(0.7);
  opacity: 0;
  pointer-events: none;
  font-size: 1.8em;
  filter: drop-shadow(0 2px 8px #000a);
  transition: opacity 0.25s, transform 0.25s;
  z-index: 10;
}
.tiger-trigger:hover .tiger-anim,
.tiger-trigger:focus .tiger-anim {
  opacity: 1;
  transform: translateX(-80%) translateY(-24px) scale(1.1) rotate(-9deg);
  animation: tiger-pop 0.5s cubic-bezier(0.4,0,0.2,1);
}
@keyframes tiger-pop {
  0% { opacity: 0; transform: translateX(-80%) translateY(20px) scale(0.5) rotate(0deg); }
  60% { opacity: 1; transform: translateX(-80%) translateY(-30px) scale(1.2) rotate(-12deg); }
  100% { opacity: 1; transform: translateX(-80%) translateY(-24px) scale(1.1) rotate(-8deg); }
}

.tiger-static {
  display: inline-block;
  font-size: 1em;
  vertical-align: middle;
  line-height: 1;
  margin-left: 0.02em;
  margin-right: 0.02em;
  opacity: 1;
  transform: none;
  transition: opacity 0.4s, transform 0.4s;
}
.tiger-static-animating {
  opacity: 0;
  transform: translateY(-32px) scale(0.7) rotate(-8deg);
  animation: tiger-static-float-in 0.7s cubic-bezier(0.4,0,0.2,1) forwards;
}
@keyframes tiger-static-float-in {
  0% {
    opacity: 0;
    transform: translateY(-32px) scale(0.7) rotate(-8deg);
  }
  60% {
    opacity: 1;
    transform: translateY(4px) scale(1.15) rotate(-4deg);
  }
  100% {
    opacity: 1;
    transform: none;
  }
}

/* --- ส่วนสำหรับ 'n' หนู และ 'h' --- */
.m-container {
  display: inline-block;
  position: relative;
  width: 0.8em; /* ปรับให้พอดีกับ 'น' และ 'ห' */
  height: 1.1em;
  overflow: hidden;
  vertical-align: middle;
  text-align: center;
}

.original-n { /* เปลี่ยนเป็น original-n เพื่อให้ตรงกับ HTML */
  display: inline-block;
  /* หากต้องการให้ 'น' จางหายไปก่อนหนูจะ pop อาจเพิ่ม transition */
}

.morphed-h { /* เพิ่ม Style สำหรับตัว 'ห' */
  display: inline-block;
  /* อาจเพิ่ม animation ให้ 'ห' ปรากฏขึ้นมาอย่างนุ่มนวล */
  animation: fade-in-h 0.3s ease-out forwards;
}

@keyframes fade-in-h {
  0% { opacity: 0; transform: translateY(10px); }
  100% { opacity: 1; transform: translateY(0); }
}

.mouse-escape-anim {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 1.2em;
  opacity: 0; /* เริ่มต้นซ่อนไว้ */
  pointer-events: none;
  animation: mouse-run-away 0.7s forwards ease-out;
}

@keyframes mouse-run-away {
  0% {
    opacity: 1; /* เริ่มแสดงผล */
    transform: translate(-50%, -50%) scale(1); /* ตำแหน่งเริ่มต้นและขนาดปกติ */
  }
  20% { /* อาจจะขยับเล็กน้อยเพื่อแสดงว่ากำลังจะวิ่ง */
    transform: translate(-40%, -60%) scale(1.1) rotate(-5deg);
  }
  100% {
    opacity: 0; /* จางหายไป */
    transform: translate(150px, -100px) scale(0.5) rotate(30deg); /* เคลื่อนที่ไปไกลและเล็กลง */
  }

}

.detail-panel {
  transform: translateX(100%);
  opacity: 0;
  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1),
              opacity 0.3s ease-out;

  &.translate-x-0 {
    transform: translateX(0);
    opacity: 1;
  }

  &.translate-x-full {
    transform: translateX(100%);
    opacity: 0;
  }

  /* ปรับแต่งเพิ่มเติม */
  width: 100%;
  max-height: 100vh;
  position: relative;
  padding: 1.5rem;

  .space-y-6 > * + * {
    margin-top: 1.5rem;
  }

  @media (min-width: 1024px) {
    width: 500px;
    margin-left: 1.5rem;
  }

  @media (max-width: 1023px) {
    position: fixed;
    top: 0;
    right: 0;
    width: 90%;
    max-width: 400px;
    height: 100vh;
    z-index: 50;
    box-shadow: -5px 0 25px rgba(0,0,0,0.5);

    &.translate-x-0 {
      transform: translateX(0);
    }
  }
}


@keyframes fadeInScale {
  0% {
    opacity: 0;
    transform: scale(0.95);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fadeOutScale {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.95);
  }
}

.animate-dialog-in {
  animation: fadeInScale 0.3s ease-out forwards;
}

.animate-dialog-out {
  animation: fadeOutScale 0.2s ease-in forwards;
}


@keyframes fadeBackdropIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeBackdropOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.animate-backdrop-in {
  animation: fadeBackdropIn 0.3s ease-out forwards;
}

.animate-backdrop-out {
  animation: fadeBackdropOut 0.3s ease-in forwards;
}
